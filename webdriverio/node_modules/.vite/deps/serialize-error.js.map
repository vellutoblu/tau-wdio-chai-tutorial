{
  "version": 3,
  "sources": ["../../serialize-error/index.js"],
  "sourcesContent": ["'use strict';\nconst {inspect} = require('util');\n\nclass NonError extends Error {\n\tconstructor(message) {\n\t\tsuper(inspect(message));\n\t\tthis.name = 'NonError';\n\t\tError.captureStackTrace(this, NonError);\n\t}\n}\n\nconst commonProperties = [\n\t'name',\n\t'message',\n\t'stack',\n\t'code'\n];\n\nconst destroyCircular = (from, seen, to_) => {\n\tconst to = to_ || (Array.isArray(from) ? [] : {});\n\n\tseen.push(from);\n\n\tfor (const [key, value] of Object.entries(from)) {\n\t\tif (typeof value === 'function') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!value || typeof value !== 'object') {\n\t\t\tto[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!seen.includes(from[key])) {\n\t\t\tto[key] = destroyCircular(from[key], seen.slice());\n\t\t\tcontinue;\n\t\t}\n\n\t\tto[key] = '[Circular]';\n\t}\n\n\tfor (const property of commonProperties) {\n\t\tif (typeof from[property] === 'string') {\n\t\t\tto[property] = from[property];\n\t\t}\n\t}\n\n\treturn to;\n};\n\nconst serializeError = value => {\n\tif (typeof value === 'object' && value !== null) {\n\t\treturn destroyCircular(value, []);\n\t}\n\n\t// People sometimes throw things besides Error objectsâ€¦\n\tif (typeof value === 'function') {\n\t\t// `JSON.stringify()` discards functions. We do too, unless a function is thrown directly.\n\t\treturn `[Function: ${(value.name || 'anonymous')}]`;\n\t}\n\n\treturn value;\n};\n\nconst deserializeError = value => {\n\tif (value instanceof Error) {\n\t\treturn value;\n\t}\n\n\tif (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n\t\tconst newError = new Error();\n\t\tdestroyCircular(value, [], newError);\n\t\treturn newError;\n\t}\n\n\treturn new NonError(value);\n};\n\nmodule.exports = {\n\tserializeError,\n\tdeserializeError\n};\n"],
  "mappings": ";;;;;;;;;AAAA;AAAA;AACA,QAAM,EAAC,QAAO,IAAI;AAElB,QAAM,WAAN,MAAM,kBAAiB,MAAM;AAAA,MAC5B,YAAY,SAAS;AACpB,cAAM,QAAQ,OAAO,CAAC;AACtB,aAAK,OAAO;AACZ,cAAM,kBAAkB,MAAM,SAAQ;AAAA,MACvC;AAAA,IACD;AAEA,QAAM,mBAAmB;AAAA,MACxB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAEA,QAAM,kBAAkB,CAAC,MAAM,MAAM,QAAQ;AAC5C,YAAM,KAAK,QAAQ,MAAM,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC;AAE/C,WAAK,KAAK,IAAI;AAEd,iBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,IAAI,GAAG;AAChD,YAAI,OAAO,UAAU,YAAY;AAChC;AAAA,QACD;AAEA,YAAI,CAAC,SAAS,OAAO,UAAU,UAAU;AACxC,aAAG,GAAG,IAAI;AACV;AAAA,QACD;AAEA,YAAI,CAAC,KAAK,SAAS,KAAK,GAAG,CAAC,GAAG;AAC9B,aAAG,GAAG,IAAI,gBAAgB,KAAK,GAAG,GAAG,KAAK,MAAM,CAAC;AACjD;AAAA,QACD;AAEA,WAAG,GAAG,IAAI;AAAA,MACX;AAEA,iBAAW,YAAY,kBAAkB;AACxC,YAAI,OAAO,KAAK,QAAQ,MAAM,UAAU;AACvC,aAAG,QAAQ,IAAI,KAAK,QAAQ;AAAA,QAC7B;AAAA,MACD;AAEA,aAAO;AAAA,IACR;AAEA,QAAM,iBAAiB,WAAS;AAC/B,UAAI,OAAO,UAAU,YAAY,UAAU,MAAM;AAChD,eAAO,gBAAgB,OAAO,CAAC,CAAC;AAAA,MACjC;AAGA,UAAI,OAAO,UAAU,YAAY;AAEhC,eAAO,cAAe,MAAM,QAAQ,WAAY;AAAA,MACjD;AAEA,aAAO;AAAA,IACR;AAEA,QAAM,mBAAmB,WAAS;AACjC,UAAI,iBAAiB,OAAO;AAC3B,eAAO;AAAA,MACR;AAEA,UAAI,OAAO,UAAU,YAAY,UAAU,QAAQ,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzE,cAAM,WAAW,IAAI,MAAM;AAC3B,wBAAgB,OAAO,CAAC,GAAG,QAAQ;AACnC,eAAO;AAAA,MACR;AAEA,aAAO,IAAI,SAAS,KAAK;AAAA,IAC1B;AAEA,WAAO,UAAU;AAAA,MAChB;AAAA,MACA;AAAA,IACD;AAAA;AAAA;",
  "names": []
}
