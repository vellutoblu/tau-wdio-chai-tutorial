{
  "version": 3,
  "sources": ["../../dom-accessibility-api/sources/polyfills/array.from.ts", "../../dom-accessibility-api/sources/polyfills/SetLike.ts", "../../dom-accessibility-api/sources/getRole.ts", "../../dom-accessibility-api/sources/util.ts", "../../dom-accessibility-api/sources/accessible-name-and-description.ts", "../../dom-accessibility-api/sources/accessible-description.ts", "../../dom-accessibility-api/sources/accessible-name.ts"],
  "sourcesContent": ["/**\n * @source {https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#Polyfill}\n * but without thisArg (too hard to type, no need to `this`)\n */\nconst toStr = Object.prototype.toString;\nfunction isCallable(fn: unknown): boolean {\n\treturn typeof fn === \"function\" || toStr.call(fn) === \"[object Function]\";\n}\nfunction toInteger(value: unknown): number {\n\tconst number = Number(value);\n\tif (isNaN(number)) {\n\t\treturn 0;\n\t}\n\tif (number === 0 || !isFinite(number)) {\n\t\treturn number;\n\t}\n\treturn (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n}\nconst maxSafeInteger = Math.pow(2, 53) - 1;\nfunction toLength(value: unknown): number {\n\tconst len = toInteger(value);\n\treturn Math.min(Math.max(len, 0), maxSafeInteger);\n}\n/**\n * Creates an array from an iterable object.\n * @param iterable An iterable object to convert to an array.\n */\nexport default function arrayFrom<T>(iterable: Iterable<T> | ArrayLike<T>): T[];\n/**\n * Creates an array from an iterable object.\n * @param iterable An iterable object to convert to an array.\n * @param mapfn A mapping function to call on every element of the array.\n * @param thisArg Value of 'this' used to invoke the mapfn.\n */\nexport default function arrayFrom<T, U>(\n\tarrayLike: Iterable<T> | ArrayLike<T>,\n\tmapFn?: (v: T, k: number) => U\n): U[] {\n\t// 1. Let C be the this value.\n\t// edit(@eps1lon): we're not calling it as Array.from\n\tconst C = Array;\n\n\t// 2. Let items be ToObject(arrayLike).\n\tconst items = Object(arrayLike);\n\n\t// 3. ReturnIfAbrupt(items).\n\tif (arrayLike == null) {\n\t\tthrow new TypeError(\n\t\t\t\"Array.from requires an array-like object - not null or undefined\"\n\t\t);\n\t}\n\n\t// 4. If mapfn is undefined, then let mapping be false.\n\t// const mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n\n\tif (typeof mapFn !== \"undefined\") {\n\t\t// 5. else\n\t\t// 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n\t\tif (!isCallable(mapFn)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t\"Array.from: when provided, the second argument must be a function\"\n\t\t\t);\n\t\t}\n\t}\n\n\t// 10. Let lenValue be Get(items, \"length\").\n\t// 11. Let len be ToLength(lenValue).\n\tconst len = toLength(items.length);\n\n\t// 13. If IsConstructor(C) is true, then\n\t// 13. a. Let A be the result of calling the [[Construct]] internal method\n\t// of C with an argument list containing the single item len.\n\t// 14. a. Else, Let A be ArrayCreate(len).\n\tconst A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n\t// 16. Let k be 0.\n\tlet k = 0;\n\t// 17. Repeat, while k < lenâ€¦ (also steps a - h)\n\tlet kValue;\n\twhile (k < len) {\n\t\tkValue = items[k];\n\t\tif (mapFn) {\n\t\t\tA[k] = mapFn(kValue, k);\n\t\t} else {\n\t\t\tA[k] = kValue;\n\t\t}\n\t\tk += 1;\n\t}\n\t// 18. Let putStatus be Put(A, \"length\", len, true).\n\tA.length = len;\n\t// 20. Return A.\n\treturn A;\n}\n", "declare global {\n\tclass Set<T> {\n\t\t// es2015.collection.d.ts\n\t\tconstructor(items?: T[]);\n\t\tadd(value: T): this;\n\t\tclear(): void;\n\t\tdelete(value: T): boolean;\n\t\tforEach(\n\t\t\tcallbackfn: (value: T, value2: T, set: Set<T>) => void,\n\t\t\tthisArg?: unknown\n\t\t): void;\n\t\thas(value: T): boolean;\n\t\treadonly size: number;\n\n\t\t// es2015.iterable.d.ts\n\t\t// no  implemennted\n\t}\n}\n\n// for environments without Set we fallback to arrays with unique members\nclass SetLike<T> implements Set<T> {\n\tprivate items: T[];\n\n\tconstructor(items: T[] = []) {\n\t\tthis.items = items;\n\t}\n\n\tadd(value: T): this {\n\t\tif (this.has(value) === false) {\n\t\t\tthis.items.push(value);\n\t\t}\n\t\treturn this;\n\t}\n\tclear(): void {\n\t\tthis.items = [];\n\t}\n\tdelete(value: T): boolean {\n\t\tconst previousLength = this.items.length;\n\t\tthis.items = this.items.filter((item) => item !== value);\n\n\t\treturn previousLength !== this.items.length;\n\t}\n\tforEach(callbackfn: (value: T, value2: T, set: Set<T>) => void): void {\n\t\tthis.items.forEach((item) => {\n\t\t\tcallbackfn(item, item, this);\n\t\t});\n\t}\n\thas(value: T): boolean {\n\t\treturn this.items.indexOf(value) !== -1;\n\t}\n\n\tget size(): number {\n\t\treturn this.items.length;\n\t}\n}\n\nexport default typeof Set === \"undefined\" ? Set : SetLike;\n", "// https://w3c.github.io/html-aria/#document-conformance-requirements-for-use-of-aria-attributes-in-html\n\n/**\n * Safe Element.localName for all supported environments\n * @param element\n */\nexport function getLocalName(element: Element): string {\n\treturn (\n\t\t// eslint-disable-next-line no-restricted-properties -- actual guard for environments without localName\n\t\telement.localName ??\n\t\t// eslint-disable-next-line no-restricted-properties -- required for the fallback\n\t\telement.tagName.toLowerCase()\n\t);\n}\n\nconst localNameToRoleMappings: Record<string, string | undefined> = {\n\tarticle: \"article\",\n\taside: \"complementary\",\n\tbutton: \"button\",\n\tdatalist: \"listbox\",\n\tdd: \"definition\",\n\tdetails: \"group\",\n\tdialog: \"dialog\",\n\tdt: \"term\",\n\tfieldset: \"group\",\n\tfigure: \"figure\",\n\t// WARNING: Only with an accessible name\n\tform: \"form\",\n\tfooter: \"contentinfo\",\n\th1: \"heading\",\n\th2: \"heading\",\n\th3: \"heading\",\n\th4: \"heading\",\n\th5: \"heading\",\n\th6: \"heading\",\n\theader: \"banner\",\n\thr: \"separator\",\n\thtml: \"document\",\n\tlegend: \"legend\",\n\tli: \"listitem\",\n\tmath: \"math\",\n\tmain: \"main\",\n\tmenu: \"list\",\n\tnav: \"navigation\",\n\tol: \"list\",\n\toptgroup: \"group\",\n\t// WARNING: Only in certain context\n\toption: \"option\",\n\toutput: \"status\",\n\tprogress: \"progressbar\",\n\t// WARNING: Only with an accessible name\n\tsection: \"region\",\n\tsummary: \"button\",\n\ttable: \"table\",\n\ttbody: \"rowgroup\",\n\ttextarea: \"textbox\",\n\ttfoot: \"rowgroup\",\n\t// WARNING: Only in certain context\n\ttd: \"cell\",\n\tth: \"columnheader\",\n\tthead: \"rowgroup\",\n\ttr: \"row\",\n\tul: \"list\",\n};\n\nconst prohibitedAttributes: Record<string, Set<string>> = {\n\tcaption: new Set([\"aria-label\", \"aria-labelledby\"]),\n\tcode: new Set([\"aria-label\", \"aria-labelledby\"]),\n\tdeletion: new Set([\"aria-label\", \"aria-labelledby\"]),\n\temphasis: new Set([\"aria-label\", \"aria-labelledby\"]),\n\tgeneric: new Set([\"aria-label\", \"aria-labelledby\", \"aria-roledescription\"]),\n\tinsertion: new Set([\"aria-label\", \"aria-labelledby\"]),\n\tparagraph: new Set([\"aria-label\", \"aria-labelledby\"]),\n\tpresentation: new Set([\"aria-label\", \"aria-labelledby\"]),\n\tstrong: new Set([\"aria-label\", \"aria-labelledby\"]),\n\tsubscript: new Set([\"aria-label\", \"aria-labelledby\"]),\n\tsuperscript: new Set([\"aria-label\", \"aria-labelledby\"]),\n};\n\n/**\n *\n * @param element\n * @param role The role used for this element. This is specified to control whether you want to use the implicit or explicit role.\n */\nfunction hasGlobalAriaAttributes(element: Element, role: string): boolean {\n\t// https://rawgit.com/w3c/aria/stable/#global_states\n\t// commented attributes are deprecated\n\treturn [\n\t\t\"aria-atomic\",\n\t\t\"aria-busy\",\n\t\t\"aria-controls\",\n\t\t\"aria-current\",\n\t\t\"aria-describedby\",\n\t\t\"aria-details\",\n\t\t// \"disabled\",\n\t\t\"aria-dropeffect\",\n\t\t// \"errormessage\",\n\t\t\"aria-flowto\",\n\t\t\"aria-grabbed\",\n\t\t// \"haspopup\",\n\t\t\"aria-hidden\",\n\t\t// \"invalid\",\n\t\t\"aria-keyshortcuts\",\n\t\t\"aria-label\",\n\t\t\"aria-labelledby\",\n\t\t\"aria-live\",\n\t\t\"aria-owns\",\n\t\t\"aria-relevant\",\n\t\t\"aria-roledescription\",\n\t].some((attributeName) => {\n\t\treturn (\n\t\t\telement.hasAttribute(attributeName) &&\n\t\t\t!prohibitedAttributes[role]?.has(attributeName)\n\t\t);\n\t});\n}\n\nfunction ignorePresentationalRole(\n\telement: Element,\n\timplicitRole: string\n): boolean {\n\t// https://rawgit.com/w3c/aria/stable/#conflict_resolution_presentation_none\n\treturn hasGlobalAriaAttributes(element, implicitRole);\n}\n\nexport default function getRole(element: Element): string | null {\n\tconst explicitRole = getExplicitRole(element);\n\tif (explicitRole === null || explicitRole === \"presentation\") {\n\t\tconst implicitRole = getImplicitRole(element);\n\t\tif (\n\t\t\texplicitRole !== \"presentation\" ||\n\t\t\tignorePresentationalRole(element, implicitRole || \"\")\n\t\t) {\n\t\t\treturn implicitRole;\n\t\t}\n\t}\n\n\treturn explicitRole;\n}\n\nfunction getImplicitRole(element: Element): string | null {\n\tconst mappedByTag = localNameToRoleMappings[getLocalName(element)];\n\tif (mappedByTag !== undefined) {\n\t\treturn mappedByTag;\n\t}\n\n\tswitch (getLocalName(element)) {\n\t\tcase \"a\":\n\t\tcase \"area\":\n\t\tcase \"link\":\n\t\t\tif (element.hasAttribute(\"href\")) {\n\t\t\t\treturn \"link\";\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"img\":\n\t\t\tif (\n\t\t\t\telement.getAttribute(\"alt\") === \"\" &&\n\t\t\t\t!ignorePresentationalRole(element, \"img\")\n\t\t\t) {\n\t\t\t\treturn \"presentation\";\n\t\t\t}\n\t\t\treturn \"img\";\n\t\tcase \"input\": {\n\t\t\tconst { type } = element as HTMLInputElement;\n\t\t\tswitch (type) {\n\t\t\t\tcase \"button\":\n\t\t\t\tcase \"image\":\n\t\t\t\tcase \"reset\":\n\t\t\t\tcase \"submit\":\n\t\t\t\t\treturn \"button\";\n\t\t\t\tcase \"checkbox\":\n\t\t\t\tcase \"radio\":\n\t\t\t\t\treturn type;\n\t\t\t\tcase \"range\":\n\t\t\t\t\treturn \"slider\";\n\t\t\t\tcase \"email\":\n\t\t\t\tcase \"tel\":\n\t\t\t\tcase \"text\":\n\t\t\t\tcase \"url\":\n\t\t\t\t\tif (element.hasAttribute(\"list\")) {\n\t\t\t\t\t\treturn \"combobox\";\n\t\t\t\t\t}\n\t\t\t\t\treturn \"textbox\";\n\n\t\t\t\tcase \"search\":\n\t\t\t\t\tif (element.hasAttribute(\"list\")) {\n\t\t\t\t\t\treturn \"combobox\";\n\t\t\t\t\t}\n\t\t\t\t\treturn \"searchbox\";\n\t\t\t\tcase \"number\":\n\t\t\t\t\treturn \"spinbutton\";\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\tcase \"select\":\n\t\t\tif (\n\t\t\t\telement.hasAttribute(\"multiple\") ||\n\t\t\t\t(element as HTMLSelectElement).size > 1\n\t\t\t) {\n\t\t\t\treturn \"listbox\";\n\t\t\t}\n\t\t\treturn \"combobox\";\n\t}\n\treturn null;\n}\n\nfunction getExplicitRole(element: Element): string | null {\n\tconst role = element.getAttribute(\"role\");\n\tif (role !== null) {\n\t\tconst explicitRole = role.trim().split(\" \")[0];\n\t\t// String.prototype.split(sep, limit) will always return an array with at least one member\n\t\t// as long as limit is either undefined or > 0\n\t\tif (explicitRole.length > 0) {\n\t\t\treturn explicitRole;\n\t\t}\n\t}\n\n\treturn null;\n}\n", "export { getLocalName } from \"./getRole\";\nimport getRole, { getLocalName } from \"./getRole\";\n\nexport function isElement(node: Node | null): node is Element {\n\treturn node !== null && node.nodeType === node.ELEMENT_NODE;\n}\n\nexport function isHTMLTableCaptionElement(\n\tnode: Node | null\n): node is HTMLTableCaptionElement {\n\treturn isElement(node) && getLocalName(node) === \"caption\";\n}\n\nexport function isHTMLInputElement(\n\tnode: Node | null\n): node is HTMLInputElement {\n\treturn isElement(node) && getLocalName(node) === \"input\";\n}\n\nexport function isHTMLOptGroupElement(\n\tnode: Node | null\n): node is HTMLOptGroupElement {\n\treturn isElement(node) && getLocalName(node) === \"optgroup\";\n}\n\nexport function isHTMLSelectElement(\n\tnode: Node | null\n): node is HTMLSelectElement {\n\treturn isElement(node) && getLocalName(node) === \"select\";\n}\n\nexport function isHTMLTableElement(\n\tnode: Node | null\n): node is HTMLTableElement {\n\treturn isElement(node) && getLocalName(node) === \"table\";\n}\n\nexport function isHTMLTextAreaElement(\n\tnode: Node | null\n): node is HTMLTextAreaElement {\n\treturn isElement(node) && getLocalName(node) === \"textarea\";\n}\n\nexport function safeWindow(node: Node): Window {\n\tconst { defaultView } =\n\t\tnode.ownerDocument === null ? (node as Document) : node.ownerDocument;\n\n\tif (defaultView === null) {\n\t\tthrow new TypeError(\"no window available\");\n\t}\n\treturn defaultView;\n}\n\nexport function isHTMLFieldSetElement(\n\tnode: Node | null\n): node is HTMLFieldSetElement {\n\treturn isElement(node) && getLocalName(node) === \"fieldset\";\n}\n\nexport function isHTMLLegendElement(\n\tnode: Node | null\n): node is HTMLLegendElement {\n\treturn isElement(node) && getLocalName(node) === \"legend\";\n}\n\nexport function isHTMLSlotElement(node: Node | null): node is HTMLSlotElement {\n\treturn isElement(node) && getLocalName(node) === \"slot\";\n}\n\nexport function isSVGElement(node: Node | null): node is SVGElement {\n\treturn isElement(node) && (node as SVGElement).ownerSVGElement !== undefined;\n}\n\nexport function isSVGSVGElement(node: Node | null): node is SVGSVGElement {\n\treturn isElement(node) && getLocalName(node) === \"svg\";\n}\n\nexport function isSVGTitleElement(node: Node | null): node is SVGTitleElement {\n\treturn isSVGElement(node) && getLocalName(node) === \"title\";\n}\n\n/**\n *\n * @param {Node} node -\n * @param {string} attributeName -\n * @returns {Element[]} -\n */\nexport function queryIdRefs(node: Node, attributeName: string): Element[] {\n\tif (isElement(node) && node.hasAttribute(attributeName)) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- safe due to hasAttribute check\n\t\tconst ids = node.getAttribute(attributeName)!.split(\" \");\n\n\t\t// Browsers that don't support shadow DOM won't have getRootNode\n\t\tconst root = node.getRootNode\n\t\t\t? (node.getRootNode() as Document | ShadowRoot)\n\t\t\t: node.ownerDocument;\n\n\t\treturn ids\n\t\t\t.map((id) => root.getElementById(id))\n\t\t\t.filter(\n\t\t\t\t(element: Element | null): element is Element => element !== null\n\t\t\t\t// TODO: why does this not narrow?\n\t\t\t) as Element[];\n\t}\n\n\treturn [];\n}\n\nexport function hasAnyConcreteRoles(\n\tnode: Node,\n\troles: Array<string | null>\n): node is Element {\n\tif (isElement(node)) {\n\t\treturn roles.indexOf(getRole(node)) !== -1;\n\t}\n\treturn false;\n}\n", "/**\n * implements https://w3c.github.io/accname/\n */\nimport ArrayFrom from \"./polyfills/array.from\";\nimport SetLike from \"./polyfills/SetLike\";\nimport {\n\thasAnyConcreteRoles,\n\tisElement,\n\tisHTMLTableCaptionElement,\n\tisHTMLInputElement,\n\tisHTMLSelectElement,\n\tisHTMLTextAreaElement,\n\tsafeWindow,\n\tisHTMLFieldSetElement,\n\tisHTMLLegendElement,\n\tisHTMLOptGroupElement,\n\tisHTMLTableElement,\n\tisHTMLSlotElement,\n\tisSVGSVGElement,\n\tisSVGTitleElement,\n\tqueryIdRefs,\n\tgetLocalName,\n} from \"./util\";\n\n/**\n *  A string of characters where all carriage returns, newlines, tabs, and form-feeds are replaced with a single space, and multiple spaces are reduced to a single space. The string contains only character data; it does not contain any markup.\n */\ntype FlatString = string & {\n\t__flat: true;\n};\n\n/**\n * interface for an options-bag where `window.getComputedStyle` can be mocked\n */\nexport interface ComputeTextAlternativeOptions {\n\tcompute?: \"description\" | \"name\";\n\t/**\n\t * Set to true if window.computedStyle supports the second argument.\n\t * This should be false in JSDOM. Otherwise JSDOM will log console errors.\n\t */\n\tcomputedStyleSupportsPseudoElements?: boolean;\n\t/**\n\t * mock window.getComputedStyle. Needs `content`, `display` and `visibility`\n\t */\n\tgetComputedStyle?: typeof window.getComputedStyle;\n\t/**\n\t * Set to `true` if you want to include hidden elements in the accessible name and description computation.\n\t * Skips 2A in https://w3c.github.io/accname/#computation-steps.\n\t * @default false\n\t */\n\thidden?: boolean;\n}\n\n/**\n *\n * @param {string} string -\n * @returns {FlatString} -\n */\nfunction asFlatString(s: string): FlatString {\n\treturn s.trim().replace(/\\s\\s+/g, \" \") as FlatString;\n}\n\n/**\n *\n * @param node -\n * @param options - These are not optional to prevent accidentally calling it without options in `computeAccessibleName`\n * @returns {boolean} -\n */\nfunction isHidden(\n\tnode: Node,\n\tgetComputedStyleImplementation: typeof window.getComputedStyle\n): node is Element {\n\tif (!isElement(node)) {\n\t\treturn false;\n\t}\n\n\tif (\n\t\tnode.hasAttribute(\"hidden\") ||\n\t\tnode.getAttribute(\"aria-hidden\") === \"true\"\n\t) {\n\t\treturn true;\n\t}\n\n\tconst style = getComputedStyleImplementation(node);\n\treturn (\n\t\tstyle.getPropertyValue(\"display\") === \"none\" ||\n\t\tstyle.getPropertyValue(\"visibility\") === \"hidden\"\n\t);\n}\n\n/**\n * @param {Node} node -\n * @returns {boolean} - As defined in step 2E of https://w3c.github.io/accname/#mapping_additional_nd_te\n */\nfunction isControl(node: Node): boolean {\n\treturn (\n\t\thasAnyConcreteRoles(node, [\"button\", \"combobox\", \"listbox\", \"textbox\"]) ||\n\t\thasAbstractRole(node, \"range\")\n\t);\n}\n\nfunction hasAbstractRole(node: Node, role: string): node is Element {\n\tif (!isElement(node)) {\n\t\treturn false;\n\t}\n\n\tswitch (role) {\n\t\tcase \"range\":\n\t\t\treturn hasAnyConcreteRoles(node, [\n\t\t\t\t\"meter\",\n\t\t\t\t\"progressbar\",\n\t\t\t\t\"scrollbar\",\n\t\t\t\t\"slider\",\n\t\t\t\t\"spinbutton\",\n\t\t\t]);\n\t\tdefault:\n\t\t\tthrow new TypeError(\n\t\t\t\t`No knowledge about abstract role '${role}'. This is likely a bug :(`\n\t\t\t);\n\t}\n}\n\n/**\n * element.querySelectorAll but also considers owned tree\n * @param element\n * @param selectors\n */\nfunction querySelectorAllSubtree(\n\telement: Element,\n\tselectors: string\n): Element[] {\n\tconst elements = ArrayFrom(element.querySelectorAll(selectors));\n\n\tqueryIdRefs(element, \"aria-owns\").forEach((root) => {\n\t\t// babel transpiles this assuming an iterator\n\t\telements.push.apply(elements, ArrayFrom(root.querySelectorAll(selectors)));\n\t});\n\n\treturn elements;\n}\n\nfunction querySelectedOptions(listbox: Element): ArrayLike<Element> {\n\tif (isHTMLSelectElement(listbox)) {\n\t\t// IE11 polyfill\n\t\treturn (\n\t\t\tlistbox.selectedOptions || querySelectorAllSubtree(listbox, \"[selected]\")\n\t\t);\n\t}\n\treturn querySelectorAllSubtree(listbox, '[aria-selected=\"true\"]');\n}\n\nfunction isMarkedPresentational(node: Node): node is Element {\n\treturn hasAnyConcreteRoles(node, [\"none\", \"presentation\"]);\n}\n\n/**\n * Elements specifically listed in html-aam\n *\n * We don't need this for `label` or `legend` elements.\n * Their implicit roles already allow \"naming from content\".\n *\n * sources:\n *\n * - https://w3c.github.io/html-aam/#table-element\n */\nfunction isNativeHostLanguageTextAlternativeElement(\n\tnode: Node\n): node is Element {\n\treturn isHTMLTableCaptionElement(node);\n}\n\n/**\n * https://w3c.github.io/aria/#namefromcontent\n */\nfunction allowsNameFromContent(node: Node): boolean {\n\treturn hasAnyConcreteRoles(node, [\n\t\t\"button\",\n\t\t\"cell\",\n\t\t\"checkbox\",\n\t\t\"columnheader\",\n\t\t\"gridcell\",\n\t\t\"heading\",\n\t\t\"label\",\n\t\t\"legend\",\n\t\t\"link\",\n\t\t\"menuitem\",\n\t\t\"menuitemcheckbox\",\n\t\t\"menuitemradio\",\n\t\t\"option\",\n\t\t\"radio\",\n\t\t\"row\",\n\t\t\"rowheader\",\n\t\t\"switch\",\n\t\t\"tab\",\n\t\t\"tooltip\",\n\t\t\"treeitem\",\n\t]);\n}\n\n/**\n * TODO https://github.com/eps1lon/dom-accessibility-api/issues/100\n */\nfunction isDescendantOfNativeHostLanguageTextAlternativeElement(\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars -- not implemented yet\n\tnode: Node\n): boolean {\n\treturn false;\n}\n\nfunction getValueOfTextbox(element: Element): string {\n\tif (isHTMLInputElement(element) || isHTMLTextAreaElement(element)) {\n\t\treturn element.value;\n\t}\n\t// https://github.com/eps1lon/dom-accessibility-api/issues/4\n\treturn element.textContent || \"\";\n}\n\nfunction getTextualContent(declaration: CSSStyleDeclaration): string {\n\tconst content = declaration.getPropertyValue(\"content\");\n\tif (/^[\"'].*[\"']$/.test(content)) {\n\t\treturn content.slice(1, -1);\n\t}\n\treturn \"\";\n}\n\n/**\n * https://html.spec.whatwg.org/multipage/forms.html#category-label\n * TODO: form-associated custom elements\n * @param element\n */\nfunction isLabelableElement(element: Element): boolean {\n\tconst localName = getLocalName(element);\n\n\treturn (\n\t\tlocalName === \"button\" ||\n\t\t(localName === \"input\" && element.getAttribute(\"type\") !== \"hidden\") ||\n\t\tlocalName === \"meter\" ||\n\t\tlocalName === \"output\" ||\n\t\tlocalName === \"progress\" ||\n\t\tlocalName === \"select\" ||\n\t\tlocalName === \"textarea\"\n\t);\n}\n\n/**\n * > [...], then the first such descendant in tree order is the label element's labeled control.\n * -- https://html.spec.whatwg.org/multipage/forms.html#labeled-control\n * @param element\n */\nfunction findLabelableElement(element: Element): Element | null {\n\tif (isLabelableElement(element)) {\n\t\treturn element;\n\t}\n\tlet labelableElement: Element | null = null;\n\telement.childNodes.forEach((childNode) => {\n\t\tif (labelableElement === null && isElement(childNode)) {\n\t\t\tconst descendantLabelableElement = findLabelableElement(childNode);\n\t\t\tif (descendantLabelableElement !== null) {\n\t\t\t\tlabelableElement = descendantLabelableElement;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn labelableElement;\n}\n\n/**\n * Polyfill of HTMLLabelElement.control\n * https://html.spec.whatwg.org/multipage/forms.html#labeled-control\n * @param label\n */\nfunction getControlOfLabel(label: HTMLLabelElement): Element | null {\n\tif (label.control !== undefined) {\n\t\treturn label.control;\n\t}\n\n\tconst htmlFor = label.getAttribute(\"for\");\n\tif (htmlFor !== null) {\n\t\treturn label.ownerDocument.getElementById(htmlFor);\n\t}\n\n\treturn findLabelableElement(label);\n}\n\n/**\n * Polyfill of HTMLInputElement.labels\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/labels\n * @param element\n */\nfunction getLabels(element: Element): HTMLLabelElement[] | null {\n\tconst labelsProperty = (element as HTMLInputElement).labels as\n\t\t| HTMLInputElement[\"labels\"]\n\t\t| undefined;\n\n\tif (labelsProperty === null) {\n\t\treturn labelsProperty;\n\t}\n\tif (labelsProperty !== undefined) {\n\t\treturn ArrayFrom(labelsProperty);\n\t}\n\n\t// polyfill\n\tif (!isLabelableElement(element)) {\n\t\treturn null;\n\t}\n\tconst document = element.ownerDocument;\n\n\treturn ArrayFrom(document.querySelectorAll(\"label\")).filter((label) => {\n\t\treturn getControlOfLabel(label) === element;\n\t});\n}\n\n/**\n * Gets the contents of a slot used for computing the accname\n * @param slot\n */\nfunction getSlotContents(slot: HTMLSlotElement): Node[] {\n\t// Computing the accessible name for elements containing slots is not\n\t// currently defined in the spec. This implementation reflects the\n\t// behavior of NVDA 2020.2/Firefox 81 and iOS VoiceOver/Safari 13.6.\n\tconst assignedNodes = slot.assignedNodes();\n\tif (assignedNodes.length === 0) {\n\t\t// if no nodes are assigned to the slot, it displays the default content\n\t\treturn ArrayFrom(slot.childNodes);\n\t}\n\treturn assignedNodes;\n}\n\n/**\n * implements https://w3c.github.io/accname/#mapping_additional_nd_te\n * @param root\n * @param options\n * @returns\n */\nexport function computeTextAlternative(\n\troot: Element,\n\toptions: ComputeTextAlternativeOptions = {}\n): string {\n\tconst consultedNodes = new SetLike<Node>();\n\n\tconst window = safeWindow(root);\n\tconst {\n\t\tcompute = \"name\",\n\t\tcomputedStyleSupportsPseudoElements = options.getComputedStyle !==\n\t\t\tundefined,\n\t\t// This might be overengineered. I don't know what happens if I call\n\t\t// window.getComputedStyle(elementFromAnotherWindow) or if I don't bind it\n\t\t// the type declarations don't require a `this`\n\t\t// eslint-disable-next-line no-restricted-properties\n\t\tgetComputedStyle = window.getComputedStyle.bind(window),\n\t\thidden = false,\n\t} = options;\n\n\t// 2F.i\n\tfunction computeMiscTextAlternative(\n\t\tnode: Node,\n\t\tcontext: { isEmbeddedInLabel: boolean; isReferenced: boolean }\n\t): string {\n\t\tlet accumulatedText = \"\";\n\t\tif (isElement(node) && computedStyleSupportsPseudoElements) {\n\t\t\tconst pseudoBefore = getComputedStyle(node, \"::before\");\n\t\t\tconst beforeContent = getTextualContent(pseudoBefore);\n\t\t\taccumulatedText = `${beforeContent} ${accumulatedText}`;\n\t\t}\n\n\t\t// FIXME: Including aria-owns is not defined in the spec\n\t\t// But it is required in the web-platform-test\n\t\tconst childNodes = isHTMLSlotElement(node)\n\t\t\t? getSlotContents(node)\n\t\t\t: ArrayFrom(node.childNodes).concat(queryIdRefs(node, \"aria-owns\"));\n\t\tchildNodes.forEach((child) => {\n\t\t\tconst result = computeTextAlternative(child, {\n\t\t\t\tisEmbeddedInLabel: context.isEmbeddedInLabel,\n\t\t\t\tisReferenced: false,\n\t\t\t\trecursion: true,\n\t\t\t});\n\t\t\t// TODO: Unclear why display affects delimiter\n\t\t\t// see https://github.com/w3c/accname/issues/3\n\t\t\tconst display = isElement(child)\n\t\t\t\t? getComputedStyle(child).getPropertyValue(\"display\")\n\t\t\t\t: \"inline\";\n\t\t\tconst separator = display !== \"inline\" ? \" \" : \"\";\n\t\t\t// trailing separator for wpt tests\n\t\t\taccumulatedText += `${separator}${result}${separator}`;\n\t\t});\n\n\t\tif (isElement(node) && computedStyleSupportsPseudoElements) {\n\t\t\tconst pseudoAfter = getComputedStyle(node, \"::after\");\n\t\t\tconst afterContent = getTextualContent(pseudoAfter);\n\t\t\taccumulatedText = `${accumulatedText} ${afterContent}`;\n\t\t}\n\n\t\treturn accumulatedText.trim();\n\t}\n\n\t/**\n\t *\n\t * @param element\n\t * @param attributeName\n\t * @returns A string non-empty string or `null`\n\t */\n\tfunction useAttribute(\n\t\telement: Element,\n\t\tattributeName: string\n\t): string | null {\n\t\tconst attribute = element.getAttributeNode(attributeName);\n\t\tif (\n\t\t\tattribute !== null &&\n\t\t\t!consultedNodes.has(attribute) &&\n\t\t\tattribute.value.trim() !== \"\"\n\t\t) {\n\t\t\tconsultedNodes.add(attribute);\n\t\t\treturn attribute.value;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction computeTooltipAttributeValue(node: Node): string | null {\n\t\tif (!isElement(node)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn useAttribute(node, \"title\");\n\t}\n\n\tfunction computeElementTextAlternative(node: Node): string | null {\n\t\tif (!isElement(node)) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// https://w3c.github.io/html-aam/#fieldset-and-legend-elements\n\t\tif (isHTMLFieldSetElement(node)) {\n\t\t\tconsultedNodes.add(node);\n\t\t\tconst children = ArrayFrom(node.childNodes);\n\t\t\tfor (let i = 0; i < children.length; i += 1) {\n\t\t\t\tconst child = children[i];\n\t\t\t\tif (isHTMLLegendElement(child)) {\n\t\t\t\t\treturn computeTextAlternative(child, {\n\t\t\t\t\t\tisEmbeddedInLabel: false,\n\t\t\t\t\t\tisReferenced: false,\n\t\t\t\t\t\trecursion: false,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isHTMLTableElement(node)) {\n\t\t\t// https://w3c.github.io/html-aam/#table-element\n\t\t\tconsultedNodes.add(node);\n\t\t\tconst children = ArrayFrom(node.childNodes);\n\t\t\tfor (let i = 0; i < children.length; i += 1) {\n\t\t\t\tconst child = children[i];\n\t\t\t\tif (isHTMLTableCaptionElement(child)) {\n\t\t\t\t\treturn computeTextAlternative(child, {\n\t\t\t\t\t\tisEmbeddedInLabel: false,\n\t\t\t\t\t\tisReferenced: false,\n\t\t\t\t\t\trecursion: false,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isSVGSVGElement(node)) {\n\t\t\t// https://www.w3.org/TR/svg-aam-1.0/\n\t\t\tconsultedNodes.add(node);\n\t\t\tconst children = ArrayFrom(node.childNodes);\n\t\t\tfor (let i = 0; i < children.length; i += 1) {\n\t\t\t\tconst child = children[i];\n\t\t\t\tif (isSVGTitleElement(child)) {\n\t\t\t\t\treturn child.textContent;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t} else if (getLocalName(node) === \"img\" || getLocalName(node) === \"area\") {\n\t\t\t// https://w3c.github.io/html-aam/#area-element\n\t\t\t// https://w3c.github.io/html-aam/#img-element\n\t\t\tconst nameFromAlt = useAttribute(node, \"alt\");\n\t\t\tif (nameFromAlt !== null) {\n\t\t\t\treturn nameFromAlt;\n\t\t\t}\n\t\t} else if (isHTMLOptGroupElement(node)) {\n\t\t\tconst nameFromLabel = useAttribute(node, \"label\");\n\t\t\tif (nameFromLabel !== null) {\n\t\t\t\treturn nameFromLabel;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tisHTMLInputElement(node) &&\n\t\t\t(node.type === \"button\" ||\n\t\t\t\tnode.type === \"submit\" ||\n\t\t\t\tnode.type === \"reset\")\n\t\t) {\n\t\t\t// https://w3c.github.io/html-aam/#input-type-text-input-type-password-input-type-search-input-type-tel-input-type-email-input-type-url-and-textarea-element-accessible-description-computation\n\t\t\tconst nameFromValue = useAttribute(node, \"value\");\n\t\t\tif (nameFromValue !== null) {\n\t\t\t\treturn nameFromValue;\n\t\t\t}\n\n\t\t\t// TODO: l10n\n\t\t\tif (node.type === \"submit\") {\n\t\t\t\treturn \"Submit\";\n\t\t\t}\n\t\t\t// TODO: l10n\n\t\t\tif (node.type === \"reset\") {\n\t\t\t\treturn \"Reset\";\n\t\t\t}\n\t\t}\n\n\t\tconst labels = getLabels(node);\n\t\tif (labels !== null && labels.length !== 0) {\n\t\t\tconsultedNodes.add(node);\n\t\t\treturn ArrayFrom(labels)\n\t\t\t\t.map((element) => {\n\t\t\t\t\treturn computeTextAlternative(element, {\n\t\t\t\t\t\tisEmbeddedInLabel: true,\n\t\t\t\t\t\tisReferenced: false,\n\t\t\t\t\t\trecursion: true,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.filter((label) => {\n\t\t\t\t\treturn label.length > 0;\n\t\t\t\t})\n\t\t\t\t.join(\" \");\n\t\t}\n\n\t\t// https://w3c.github.io/html-aam/#input-type-image-accessible-name-computation\n\t\t// TODO: wpt test consider label elements but html-aam does not mention them\n\t\t// We follow existing implementations over spec\n\t\tif (isHTMLInputElement(node) && node.type === \"image\") {\n\t\t\tconst nameFromAlt = useAttribute(node, \"alt\");\n\t\t\tif (nameFromAlt !== null) {\n\t\t\t\treturn nameFromAlt;\n\t\t\t}\n\n\t\t\tconst nameFromTitle = useAttribute(node, \"title\");\n\t\t\tif (nameFromTitle !== null) {\n\t\t\t\treturn nameFromTitle;\n\t\t\t}\n\n\t\t\t// TODO: l10n\n\t\t\treturn \"Submit Query\";\n\t\t}\n\n\t\tif (hasAnyConcreteRoles(node, [\"button\"])) {\n\t\t\t// https://www.w3.org/TR/html-aam-1.0/#button-element\n\t\t\tconst nameFromSubTree = computeMiscTextAlternative(node, {\n\t\t\t\tisEmbeddedInLabel: false,\n\t\t\t\tisReferenced: false,\n\t\t\t});\n\t\t\tif (nameFromSubTree !== \"\") {\n\t\t\t\treturn nameFromSubTree;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction computeTextAlternative(\n\t\tcurrent: Node,\n\t\tcontext: {\n\t\t\tisEmbeddedInLabel: boolean;\n\t\t\tisReferenced: boolean;\n\t\t\trecursion: boolean;\n\t\t}\n\t): string {\n\t\tif (consultedNodes.has(current)) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\t// 2A\n\t\tif (\n\t\t\t!hidden &&\n\t\t\tisHidden(current, getComputedStyle) &&\n\t\t\t!context.isReferenced\n\t\t) {\n\t\t\tconsultedNodes.add(current);\n\t\t\treturn \"\" as FlatString;\n\t\t}\n\n\t\t// 2B\n\t\tconst labelAttributeNode = isElement(current)\n\t\t\t? current.getAttributeNode(\"aria-labelledby\")\n\t\t\t: null;\n\t\t// TODO: Do we generally need to block query IdRefs of attributes we have already consulted?\n\t\tconst labelElements =\n\t\t\tlabelAttributeNode !== null && !consultedNodes.has(labelAttributeNode)\n\t\t\t\t? queryIdRefs(current, \"aria-labelledby\")\n\t\t\t\t: [];\n\t\tif (\n\t\t\tcompute === \"name\" &&\n\t\t\t!context.isReferenced &&\n\t\t\tlabelElements.length > 0\n\t\t) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- Can't be null here otherwise labelElements would be empty\n\t\t\tconsultedNodes.add(labelAttributeNode!);\n\n\t\t\treturn labelElements\n\t\t\t\t.map((element) => {\n\t\t\t\t\t// TODO: Chrome will consider repeated values i.e. use a node multiple times while we'll bail out in computeTextAlternative.\n\t\t\t\t\treturn computeTextAlternative(element, {\n\t\t\t\t\t\tisEmbeddedInLabel: context.isEmbeddedInLabel,\n\t\t\t\t\t\tisReferenced: true,\n\t\t\t\t\t\t// this isn't recursion as specified, otherwise we would skip\n\t\t\t\t\t\t// `aria-label` in\n\t\t\t\t\t\t// <input id=\"myself\" aria-label=\"foo\" aria-labelledby=\"myself\"\n\t\t\t\t\t\trecursion: false,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.join(\" \");\n\t\t}\n\n\t\t// 2C\n\t\t// Changed from the spec in anticipation of https://github.com/w3c/accname/issues/64\n\t\t// spec says we should only consider skipping if we have a non-empty label\n\t\tconst skipToStep2E =\n\t\t\tcontext.recursion && isControl(current) && compute === \"name\";\n\t\tif (!skipToStep2E) {\n\t\t\tconst ariaLabel = (\n\t\t\t\t(isElement(current) && current.getAttribute(\"aria-label\")) ||\n\t\t\t\t\"\"\n\t\t\t).trim();\n\t\t\tif (ariaLabel !== \"\" && compute === \"name\") {\n\t\t\t\tconsultedNodes.add(current);\n\t\t\t\treturn ariaLabel;\n\t\t\t}\n\n\t\t\t// 2D\n\t\t\tif (!isMarkedPresentational(current)) {\n\t\t\t\tconst elementTextAlternative = computeElementTextAlternative(current);\n\t\t\t\tif (elementTextAlternative !== null) {\n\t\t\t\t\tconsultedNodes.add(current);\n\t\t\t\t\treturn elementTextAlternative;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// special casing, cheating to make tests pass\n\t\t// https://github.com/w3c/accname/issues/67\n\t\tif (hasAnyConcreteRoles(current, [\"menu\"])) {\n\t\t\tconsultedNodes.add(current);\n\t\t\treturn \"\";\n\t\t}\n\n\t\t// 2E\n\t\tif (skipToStep2E || context.isEmbeddedInLabel || context.isReferenced) {\n\t\t\tif (hasAnyConcreteRoles(current, [\"combobox\", \"listbox\"])) {\n\t\t\t\tconsultedNodes.add(current);\n\t\t\t\tconst selectedOptions = querySelectedOptions(current);\n\t\t\t\tif (selectedOptions.length === 0) {\n\t\t\t\t\t// defined per test `name_heading_combobox`\n\t\t\t\t\treturn isHTMLInputElement(current) ? current.value : \"\";\n\t\t\t\t}\n\t\t\t\treturn ArrayFrom(selectedOptions)\n\t\t\t\t\t.map((selectedOption) => {\n\t\t\t\t\t\treturn computeTextAlternative(selectedOption, {\n\t\t\t\t\t\t\tisEmbeddedInLabel: context.isEmbeddedInLabel,\n\t\t\t\t\t\t\tisReferenced: false,\n\t\t\t\t\t\t\trecursion: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.join(\" \");\n\t\t\t}\n\t\t\tif (hasAbstractRole(current, \"range\")) {\n\t\t\t\tconsultedNodes.add(current);\n\t\t\t\tif (current.hasAttribute(\"aria-valuetext\")) {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- safe due to hasAttribute guard\n\t\t\t\t\treturn current.getAttribute(\"aria-valuetext\")!;\n\t\t\t\t}\n\t\t\t\tif (current.hasAttribute(\"aria-valuenow\")) {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- safe due to hasAttribute guard\n\t\t\t\t\treturn current.getAttribute(\"aria-valuenow\")!;\n\t\t\t\t}\n\t\t\t\t// Otherwise, use the value as specified by a host language attribute.\n\t\t\t\treturn current.getAttribute(\"value\") || \"\";\n\t\t\t}\n\t\t\tif (hasAnyConcreteRoles(current, [\"textbox\"])) {\n\t\t\t\tconsultedNodes.add(current);\n\t\t\t\treturn getValueOfTextbox(current);\n\t\t\t}\n\t\t}\n\n\t\t// 2F: https://w3c.github.io/accname/#step2F\n\t\tif (\n\t\t\tallowsNameFromContent(current) ||\n\t\t\t(isElement(current) && context.isReferenced) ||\n\t\t\tisNativeHostLanguageTextAlternativeElement(current) ||\n\t\t\tisDescendantOfNativeHostLanguageTextAlternativeElement(current)\n\t\t) {\n\t\t\tconst accumulatedText2F = computeMiscTextAlternative(current, {\n\t\t\t\tisEmbeddedInLabel: context.isEmbeddedInLabel,\n\t\t\t\tisReferenced: false,\n\t\t\t});\n\t\t\tif (accumulatedText2F !== \"\") {\n\t\t\t\tconsultedNodes.add(current);\n\t\t\t\treturn accumulatedText2F;\n\t\t\t}\n\t\t}\n\n\t\tif (current.nodeType === current.TEXT_NODE) {\n\t\t\tconsultedNodes.add(current);\n\t\t\treturn current.textContent || \"\";\n\t\t}\n\n\t\tif (context.recursion) {\n\t\t\tconsultedNodes.add(current);\n\t\t\treturn computeMiscTextAlternative(current, {\n\t\t\t\tisEmbeddedInLabel: context.isEmbeddedInLabel,\n\t\t\t\tisReferenced: false,\n\t\t\t});\n\t\t}\n\n\t\tconst tooltipAttributeValue = computeTooltipAttributeValue(current);\n\t\tif (tooltipAttributeValue !== null) {\n\t\t\tconsultedNodes.add(current);\n\t\t\treturn tooltipAttributeValue;\n\t\t}\n\n\t\t// TODO should this be reachable?\n\t\tconsultedNodes.add(current);\n\t\treturn \"\";\n\t}\n\n\treturn asFlatString(\n\t\tcomputeTextAlternative(root, {\n\t\t\tisEmbeddedInLabel: false,\n\t\t\t// by spec computeAccessibleDescription starts with the referenced elements as roots\n\t\t\tisReferenced: compute === \"description\",\n\t\t\trecursion: false,\n\t\t})\n\t);\n}\n", "import {\n\tcomputeTextAlternative,\n\tComputeTextAlternativeOptions,\n} from \"./accessible-name-and-description\";\nimport { queryIdRefs } from \"./util\";\n\n/**\n * @param root\n * @param options\n * @returns\n */\nexport function computeAccessibleDescription(\n\troot: Element,\n\toptions: ComputeTextAlternativeOptions = {}\n): string {\n\tlet description = queryIdRefs(root, \"aria-describedby\")\n\t\t.map((element) => {\n\t\t\treturn computeTextAlternative(element, {\n\t\t\t\t...options,\n\t\t\t\tcompute: \"description\",\n\t\t\t});\n\t\t})\n\t\t.join(\" \");\n\n\t// TODO: Technically we need to make sure that node wasn't used for the accessible name\n\t//       This causes `description_1.0_combobox-focusable-manual` to fail\n\t//\n\t// https://www.w3.org/TR/html-aam-1.0/#accessible-name-and-description-computation\n\t// says for so many elements to use the `title` that we assume all elements are considered\n\tif (description === \"\") {\n\t\tconst title = root.getAttribute(\"title\");\n\t\tdescription = title === null ? \"\" : title;\n\t}\n\n\treturn description;\n}\n", "import {\n\tcomputeTextAlternative,\n\tComputeTextAlternativeOptions,\n} from \"./accessible-name-and-description\";\nimport { hasAnyConcreteRoles } from \"./util\";\n\n/**\n * https://w3c.github.io/aria/#namefromprohibited\n */\nfunction prohibitsNaming(node: Node): boolean {\n\treturn hasAnyConcreteRoles(node, [\n\t\t\"caption\",\n\t\t\"code\",\n\t\t\"deletion\",\n\t\t\"emphasis\",\n\t\t\"generic\",\n\t\t\"insertion\",\n\t\t\"paragraph\",\n\t\t\"presentation\",\n\t\t\"strong\",\n\t\t\"subscript\",\n\t\t\"superscript\",\n\t]);\n}\n\n/**\n * implements https://w3c.github.io/accname/#mapping_additional_nd_name\n * @param root\n * @param options\n * @returns\n */\nexport function computeAccessibleName(\n\troot: Element,\n\toptions: ComputeTextAlternativeOptions = {}\n): string {\n\tif (prohibitsNaming(root)) {\n\t\treturn \"\";\n\t}\n\n\treturn computeTextAlternative(root, options);\n}\n"],
  "mappings": "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",
  "names": ["toStr", "Object", "prototype", "toString", "isCallable", "fn", "call", "toInteger", "value", "number", "Number", "isNaN", "isFinite", "Math", "floor", "abs", "maxSafeInteger", "pow", "toLength", "len", "min", "max", "arrayLike", "mapFn", "C", "Array", "items", "TypeError", "length", "A", "k", "kValue", "SetLike", "items", "value", "has", "push", "previousLength", "length", "filter", "item", "callbackfn", "forEach", "indexOf", "Set", "getLocalName", "element", "localName", "tagName", "toLowerCase", "localNameToRoleMappings", "article", "aside", "button", "datalist", "dd", "details", "dialog", "dt", "fieldset", "figure", "form", "footer", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hr", "html", "legend", "li", "math", "main", "menu", "nav", "ol", "optgroup", "option", "output", "progress", "section", "summary", "table", "tbody", "textarea", "tfoot", "td", "th", "thead", "tr", "ul", "prohibitedAttributes", "caption", "Set", "code", "deletion", "emphasis", "generic", "insertion", "paragraph", "presentation", "strong", "subscript", "superscript", "hasGlobalAriaAttributes", "role", "some", "attributeName", "hasAttribute", "has", "ignorePresentationalRole", "implicitRole", "explicitRole", "getExplicitRole", "getImplicitRole", "mappedByTag", "undefined", "getAttribute", "type", "size", "trim", "split", "length", "isElement", "node", "nodeType", "ELEMENT_NODE", "isHTMLTableCaptionElement", "getLocalName", "isHTMLInputElement", "isHTMLOptGroupElement", "isHTMLSelectElement", "isHTMLTableElement", "isHTMLTextAreaElement", "safeWindow", "ownerDocument", "defaultView", "TypeError", "isHTMLFieldSetElement", "isHTMLLegendElement", "isHTMLSlotElement", "isSVGElement", "ownerSVGElement", "undefined", "isSVGSVGElement", "isSVGTitleElement", "queryIdRefs", "attributeName", "hasAttribute", "ids", "getAttribute", "split", "root", "getRootNode", "map", "id", "getElementById", "filter", "element", "hasAnyConcreteRoles", "roles", "indexOf", "getRole", "asFlatString", "s", "trim", "replace", "isHidden", "node", "getComputedStyleImplementation", "isElement", "hasAttribute", "getAttribute", "style", "getPropertyValue", "isControl", "hasAnyConcreteRoles", "hasAbstractRole", "role", "TypeError", "querySelectorAllSubtree", "element", "selectors", "elements", "ArrayFrom", "querySelectorAll", "queryIdRefs", "forEach", "root", "push", "apply", "querySelectedOptions", "listbox", "isHTMLSelectElement", "selectedOptions", "isMarkedPresentational", "isNativeHostLanguageTextAlternativeElement", "isHTMLTableCaptionElement", "allowsNameFromContent", "isDescendantOfNativeHostLanguageTextAlternativeElement", "getValueOfTextbox", "isHTMLInputElement", "isHTMLTextAreaElement", "value", "textContent", "getTextualContent", "declaration", "content", "test", "slice", "isLabelableElement", "localName", "getLocalName", "findLabelableElement", "labelableElement", "childNodes", "childNode", "descendantLabelableElement", "getControlOfLabel", "label", "control", "undefined", "htmlFor", "ownerDocument", "getElementById", "getLabels", "labelsProperty", "labels", "document", "filter", "getSlotContents", "slot", "assignedNodes", "length", "computeTextAlternative", "options", "consultedNodes", "SetLike", "window", "safeWindow", "compute", "computedStyleSupportsPseudoElements", "getComputedStyle", "bind", "hidden", "computeMiscTextAlternative", "context", "accumulatedText", "pseudoBefore", "beforeContent", "isHTMLSlotElement", "concat", "child", "result", "isEmbeddedInLabel", "isReferenced", "recursion", "display", "separator", "pseudoAfter", "afterContent", "useAttribute", "attributeName", "attribute", "getAttributeNode", "has", "add", "computeTooltipAttributeValue", "computeElementTextAlternative", "isHTMLFieldSetElement", "children", "i", "isHTMLLegendElement", "isHTMLTableElement", "isSVGSVGElement", "isSVGTitleElement", "nameFromAlt", "isHTMLOptGroupElement", "nameFromLabel", "type", "nameFromValue", "map", "join", "nameFromTitle", "nameFromSubTree", "current", "labelAttributeNode", "labelElements", "skipToStep2E", "ariaLabel", "elementTextAlternative", "selectedOption", "accumulatedText2F", "nodeType", "TEXT_NODE", "tooltipAttributeValue", "computeAccessibleDescription", "root", "options", "description", "queryIdRefs", "map", "element", "computeTextAlternative", "compute", "join", "title", "getAttribute", "prohibitsNaming", "node", "hasAnyConcreteRoles", "computeAccessibleName", "root", "options", "computeTextAlternative"]
}
