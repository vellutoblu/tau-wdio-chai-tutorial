import {
  require_util
} from "./chunk-DKJIEBHF.js";
import "./chunk-KM4IWVFL.js";
import {
  __commonJS
} from "./chunk-WNKWOKNR.js";

// node_modules/serialize-error/index.js
var require_serialize_error = __commonJS({
  "node_modules/serialize-error/index.js"(exports, module) {
    var { inspect } = require_util();
    var NonError = class _NonError extends Error {
      constructor(message) {
        super(inspect(message));
        this.name = "NonError";
        Error.captureStackTrace(this, _NonError);
      }
    };
    var commonProperties = [
      "name",
      "message",
      "stack",
      "code"
    ];
    var destroyCircular = (from, seen, to_) => {
      const to = to_ || (Array.isArray(from) ? [] : {});
      seen.push(from);
      for (const [key, value] of Object.entries(from)) {
        if (typeof value === "function") {
          continue;
        }
        if (!value || typeof value !== "object") {
          to[key] = value;
          continue;
        }
        if (!seen.includes(from[key])) {
          to[key] = destroyCircular(from[key], seen.slice());
          continue;
        }
        to[key] = "[Circular]";
      }
      for (const property of commonProperties) {
        if (typeof from[property] === "string") {
          to[property] = from[property];
        }
      }
      return to;
    };
    var serializeError = (value) => {
      if (typeof value === "object" && value !== null) {
        return destroyCircular(value, []);
      }
      if (typeof value === "function") {
        return `[Function: ${value.name || "anonymous"}]`;
      }
      return value;
    };
    var deserializeError = (value) => {
      if (value instanceof Error) {
        return value;
      }
      if (typeof value === "object" && value !== null && !Array.isArray(value)) {
        const newError = new Error();
        destroyCircular(value, [], newError);
        return newError;
      }
      return new NonError(value);
    };
    module.exports = {
      serializeError,
      deserializeError
    };
  }
});
export default require_serialize_error();
//# sourceMappingURL=serialize-error.js.map
