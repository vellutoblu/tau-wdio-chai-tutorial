import type { Environment } from './types.js';
import type { ReportOptions } from 'istanbul-reports';
export declare const SESSIONS: Map<string, Environment>;
export declare const BROWSER_POOL: Map<string, WebdriverIO.Browser>;
export declare const EVENTS: {
    readonly suite: "suite:start";
    readonly 'suite end': "suite:end";
    readonly test: "test:start";
    readonly 'test end': "test:end";
    readonly hook: "hook:start";
    readonly 'hook end': "hook:end";
    readonly pass: "test:pass";
    readonly fail: "test:fail";
    readonly retry: "test:retry";
    readonly pending: "test:pending";
};
export declare const FRAMEWORK_SUPPORT_ERROR = "Currently only \"mocha\" is supported as framework when using @wdio/browser-runner.";
export declare enum MESSAGE_TYPES {
    consoleMessage = 0,
    commandRequestMessage = 1,
    commandResponseMessage = 2,
    hookTriggerMessage = 3,
    hookResultMessage = 4
}
export declare const DEFAULT_INCLUDE: string[];
export declare const DEFAULT_FILE_EXTENSIONS: string[];
export declare const DEFAULT_REPORTS_DIRECTORY = "coverage";
export declare const DEFAULT_AUTOMOCK = true;
export declare const DEFAULT_MOCK_DIRECTORY = "__mocks__";
export declare const SUMMARY_REPORTER = "json-summary";
export declare const COVERAGE_FACTORS: readonly ["lines", "functions", "branches", "statements"];
export declare const DEFAULT_COVERAGE_REPORTS: (keyof ReportOptions)[];
export declare const GLOBAL_TRESHOLD_REPORTING = "ERROR: Coverage for %s (%s%) does not meet global threshold (%s%)";
export declare const FILE_TRESHOLD_REPORTING = "ERROR: Coverage for %s (%s%) does not meet threshold (%s%) for %s";
export declare const MOCHA_VARIABELS = ":root {\n    --mocha-color: #000;\n    --mocha-bg-color: #fff;\n    --mocha-pass-icon-color: #00d6b2;\n    --mocha-pass-color: #fff;\n    --mocha-pass-shadow-color: rgba(0, 0, 0, .2);\n    --mocha-pass-mediump-color: #c09853;\n    --mocha-pass-slow-color: #b94a48;\n    --mocha-test-pending-color: #0b97c4;\n    --mocha-test-pending-icon-color: #0b97c4;\n    --mocha-test-fail-color: #c00;\n    --mocha-test-fail-icon-color: #c00;\n    --mocha-test-fail-pre-color: #000;\n    --mocha-test-fail-pre-error-color: #c00;\n    --mocha-test-html-error-color: #000;\n    --mocha-box-shadow-color: #eee;\n    --mocha-box-bottom-color: #ddd;\n    --mocha-test-replay-color: #000;\n    --mocha-test-replay-bg-color: #eee;\n    --mocha-stats-color: #888;\n    --mocha-stats-em-color: #000;\n    --mocha-stats-hover-color: #eee;\n    --mocha-error-color: #c00;\n\n    --mocha-code-comment: #ddd;\n    --mocha-code-init: #2f6fad;\n    --mocha-code-string: #5890ad;\n    --mocha-code-keyword: #8a6343;\n    --mocha-code-number: #2f6fad;\n}\n\n@media (prefers-color-scheme: dark) {\n    :root {\n        --mocha-color: #fff;\n        --mocha-bg-color: #222;\n        --mocha-pass-icon-color: #00d6b2;\n        --mocha-pass-color: #222;\n        --mocha-pass-shadow-color: rgba(255, 255, 255, .2);\n        --mocha-pass-mediump-color: #f1be67;\n        --mocha-pass-slow-color: #f49896;\n        --mocha-test-pending-color: #0b97c4;\n        --mocha-test-pending-icon-color: #0b97c4;\n        --mocha-test-fail-color: #f44;\n        --mocha-test-fail-icon-color: #f44;\n        --mocha-test-fail-pre-color: #fff;\n        --mocha-test-fail-pre-error-color: #f44;\n        --mocha-test-html-error-color: #fff;\n        --mocha-box-shadow-color: #444;\n        --mocha-box-bottom-color: #555;\n        --mocha-test-replay-color: #fff;\n        --mocha-test-replay-bg-color: #444;\n        --mocha-stats-color: #aaa;\n        --mocha-stats-em-color: #fff;\n        --mocha-stats-hover-color: #444;\n        --mocha-error-color: #f44;\n\n        --mocha-code-comment: #ddd;\n        --mocha-code-init: #9cc7f1;\n        --mocha-code-string: #80d4ff;\n        --mocha-code-keyword: #e3a470;\n        --mocha-code-number: #4ca7ff;\n    }\n}\n";
//# sourceMappingURL=constants.d.ts.map